generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String    @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime? @db.Timestamptz(6)
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)
  email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model users {
  instance_id                 String?           @db.Uuid
  id                          String            @id @db.Uuid
  aud                         String?           @db.VarChar(255)
  role                        String?           @db.VarChar(255)
  email                       String?           @db.VarChar(255)
  encrypted_password          String?           @db.VarChar(255)
  email_confirmed_at          DateTime?         @db.Timestamptz(6)
  invited_at                  DateTime?         @db.Timestamptz(6)
  confirmation_token          String?           @db.VarChar(255)
  confirmation_sent_at        DateTime?         @db.Timestamptz(6)
  recovery_token              String?           @db.VarChar(255)
  recovery_sent_at            DateTime?         @db.Timestamptz(6)
  email_change_token_new      String?           @db.VarChar(255)
  email_change                String?           @db.VarChar(255)
  email_change_sent_at        DateTime?         @db.Timestamptz(6)
  last_sign_in_at             DateTime?         @db.Timestamptz(6)
  raw_app_meta_data           Json?
  raw_user_meta_data          Json?
  is_super_admin              Boolean?
  created_at                  DateTime?         @db.Timestamptz(6)
  updated_at                  DateTime?         @db.Timestamptz(6)
  phone                       String?           @unique
  phone_confirmed_at          DateTime?         @db.Timestamptz(6)
  phone_change                String?           @default("")
  phone_change_token          String?           @default("") @db.VarChar(255)
  phone_change_sent_at        DateTime?         @db.Timestamptz(6)
  confirmed_at                DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current  String?           @default("") @db.VarChar(255)
  email_change_confirm_status Int?              @default(0) @db.SmallInt
  banned_until                DateTime?         @db.Timestamptz(6)
  reauthentication_token      String?           @default("") @db.VarChar(255)
  reauthentication_sent_at    DateTime?         @db.Timestamptz(6)
  is_sso_user                 Boolean           @default(false)
  deleted_at                  DateTime?         @db.Timestamptz(6)
  is_anonymous                Boolean           @default(false)
  identities                  identities[]
  mfa_factors                 mfa_factors[]
  one_time_tokens             one_time_tokens[]
  sessions                    sessions[]
  //Usuarios                    Usuarios?

  @@index([instance_id])
  @@index([is_anonymous])
  @@schema("auth")
}

model Comentarios_Tarea {
  Comentario_ID     Int       @id @default(autoincrement())
  Tarea_ID          Int
  contenido         String
  fechaRegistro     DateTime  @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime? @db.Timestamp(6)
  Usuario_ID        String    @db.Uuid
  Tareas            Tareas    @relation(fields: [Tarea_ID], references: [Tarea_ID], onDelete: Cascade, onUpdate: NoAction)
  Usuarios          Usuarios  @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model Dependencias_Tarea {
  Tarea_ID                                         Int
  Dependencia_ID                                   Int
  fecharegistro                                    DateTime? @default(now()) @db.Timestamp(6)
  Tareas_Dependencias_Tarea_Dependencia_IDToTareas Tareas    @relation("Dependencias_Tarea_Dependencia_IDToTareas", fields: [Dependencia_ID], references: [Tarea_ID], onDelete: NoAction, onUpdate: NoAction)
  Tareas_Dependencias_Tarea_Tarea_IDToTareas       Tareas    @relation("Dependencias_Tarea_Tarea_IDToTareas", fields: [Tarea_ID], references: [Tarea_ID], onDelete: NoAction, onUpdate: NoAction)

  @@id([Tarea_ID, Dependencia_ID])
  @@schema("public")
}

model Estados_Tarea {
  nombre            String    @db.VarChar(100)
  descripcion       String?
  fechaRegistro     DateTime  @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime? @db.Timestamp(6)
  Estado_Tarea_ID   Int       @id @default(autoincrement())
  Tareas            Tareas[]

  @@schema("public")
}

model Fuentes {
  Fuente_ID         Int                 @id @default(autoincrement())
  nombre            String              @db.VarChar(100)
  precio            Decimal             @db.Decimal(10, 2)
  fechaRegistro     DateTime            @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?           @db.Timestamp(6)
  Historial_Fuentes Historial_Fuentes[]

  @@schema("public")
}

model Historial_Fuentes {
  Fuente_ID        Int
  cantidadComprada Int
  precioCompra     Decimal  @db.Decimal(10, 2)
  fechaRegistro    DateTime @default(now()) @db.Timestamp(6)
  Usuario_ID       String   @db.Uuid
  HFuente_ID       Int   @id @unique @default(autoincrement())
  Fuentes          Fuentes  @relation(fields: [Fuente_ID], references: [Fuente_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Historial_Recompensas_Fuentes.Fuente_ID")
  Usuarios         Usuarios @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: Cascade, onUpdate: NoAction, map: "FK_Historial_Recompensas_Fuentes.Usuario_ID")

  @@schema("public")
}

model Historial_Recompensas {
  Recompensa_ID    Int
  cantidadComprada Int
  precioCompra     Decimal     @db.Decimal(10, 2)
  fechaRegistro    DateTime    @default(now()) @db.Timestamp(6)
  Usuario_ID       String      @db.Uuid
  HRecompensa_ID   Int      @id @unique @default(autoincrement())
  Recompensas      Recompensas @relation(fields: [Recompensa_ID], references: [Recompensa_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Historial_Recompensas.Recompensa_ID")
  Usuarios         Usuarios    @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: Cascade, onUpdate: NoAction, map: "FK_Historial_Recompensas.Usuario_ID")

  @@schema("public")
}

model Historial_Temas {
  Tema_ID          Int
  cantidadComprada Int
  precioCompra     Decimal  @db.Decimal(10, 2)
  fechaRegistro    DateTime @default(now()) @db.Timestamp(6)
  Usuario_ID       String   @db.Uuid
  HTema_ID         Int   @id @unique @default(autoincrement())
  Temas            Temas    @relation(fields: [Tema_ID], references: [Tema_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Historial_Recompensas_Temas.Tema_ID")
  Usuarios         Usuarios @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: Cascade, onUpdate: NoAction, map: "FK_Historial_Recompensas_Temas.Usuario_ID")

  @@schema("public")
}

model Iconos {
  Icono_ID          Int           @id @default(autoincrement())
  nombre            String        @db.VarChar(100)
  fechaRegistro     DateTime      @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?     @db.Timestamp(6)
  Recompensas       Recompensas[]

  @@schema("public")
}

model Idiomas {
  Idioma_ID         Int        @id @default(autoincrement())
  nombre            String     @db.VarChar(50)
  fechaRegistro     DateTime   @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?  @db.Timestamp(6)
  Usuarios          Usuarios[]

  @@schema("public")
}

model Insignia_Categoria {
  Insignia_Cat_ID   Int         @id @default(autoincrement())
  nombre            String      @db.VarChar(100)
  campoComparativo  String      @db.VarChar(50)
  fechaRegistro     DateTime    @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?   @db.Timestamp(6)
  Insignias         Insignias[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Insignia_Conseguida {
  Insignia_Conseguida_ID  Int       @id @default(autoincrement())
  Insignia_ID             Int
  fechaRegistro           DateTime  @default(now()) @db.Timestamp(6)
  Usuario_ID              String    @db.Uuid
  Insignias               Insignias @relation(fields: [Insignia_ID], references: [Insignia_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Insignia_Conseguida.Insignia_ID")
  Usuarios                Usuarios  @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: Cascade, onUpdate: NoAction, map: "FK_Insignia_Conseguida.Usuario_ID")

  //@@id([Insignia_ID, Usuario_ID])
  @@schema("public")
}

model Insignias {
  Insignia_ID         Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(100)
  descripcion         String
  Insignia_Cat_ID     Int
  meta                Int
  foto                String?
  fechaRegistro       DateTime              @default(now()) @db.Timestamp(6)
  fechaModificacion   DateTime?             @db.Timestamp(6)
  Insignia_Conseguida Insignia_Conseguida[]
  Insignia_Categoria  Insignia_Categoria    @relation(fields: [Insignia_Cat_ID], references: [Insignia_Cat_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Insignias.Insignia_Cat_ID")

  @@schema("public")
}

model Invitaciones {
  Invitacion_ID   Int       @id @default(autoincrement())
  Proyecto_ID     Int
  correo          String    @db.VarChar(255)
  token           String    @db.VarChar(255)
  fechaExpiracion DateTime  @default(dbgenerated("(CURRENT_TIMESTAMP + '1 day'::interval)")) @db.Timestamp(6)
  fechaRegistro   DateTime? @default(now()) @db.Timestamp(6)
  fueUsado        Boolean?  @default(false)
  Proyectos       Proyectos @relation(fields: [Proyecto_ID], references: [Proyecto_ID], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model Miembro_Proyecto {
  Miembro_ID        Int       @id @default(autoincrement())
  Proyecto_ID       Int
  Rol_ID            Int       @default(1)
  gemas             Int       @default(0)
  fechaRegistro     DateTime  @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime? @db.Timestamp(6)
  Usuario_ID        String    @db.Uuid
  Proyectos         Proyectos @relation(fields: [Proyecto_ID], references: [Proyecto_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Miembro_Proyecto.Proyecto_ID")
  Roles             Roles     @relation(fields: [Rol_ID], references: [Rol_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Miembro_Proyecto.Rol_ID")
  Usuarios          Usuarios  @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: Cascade, onUpdate: NoAction, map: "FK_Miembro_Proyecto.Usuario_ID")

  //@@id([Usuario_ID, Proyecto_ID])
  @@schema("public")
}

model Preguntas {
  Pregunta_ID       Int       @id @default(autoincrement())
  titulo            String    @db.VarChar(200)
  contenido         String
  fechaRegistro     DateTime  @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime? @db.Timestamp(6)

  @@schema("public")
}

model Proyectos {
  Proyecto_ID       Int                @id @default(autoincrement())
  nombre            String             @db.VarChar(100)
  descripcion       String
  fechaRegistro     DateTime           @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?          @db.Timestamp(6)
  gastos            Decimal?           @db.Decimal
  presupuesto       Decimal?           @db.Decimal
  Usuario_ID        String             @db.Uuid
  eliminado         Boolean            @default(false)
  Invitaciones      Invitaciones[]
  Miembro_Proyecto  Miembro_Proyecto[]
  Usuarios          Usuarios           @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: NoAction)
  Recompensas       Recompensas[]
  Tareas            Tareas[]

  @@schema("public")
}

model Recompensas {
  Recompensa_ID         Int                     @id @default(autoincrement())
  Proyecto_ID           Int
  Icono_ID              Int
  nombre                String                  @db.VarChar(100)
  descripcion           String?
  precio                Decimal                 @db.Decimal(10, 2)
  cantidad              Int
  limite                Int
  fechaRegistro         DateTime                @default(now()) @db.Timestamp(6)
  fechaModificacion     DateTime?               @db.Timestamp(6)
  totalCompras          Int                     @default(0)
  Historial_Recompensas Historial_Recompensas[]
  Iconos                Iconos                  @relation(fields: [Icono_ID], references: [Icono_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recompensas.Icono_ID")
  Proyectos             Proyectos               @relation(fields: [Proyecto_ID], references: [Proyecto_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Recompensas.Proyecto_ID")

  @@schema("public")
}

model Roles {
  Rol_ID            Int                @id @default(autoincrement())
  nombre            String             @db.VarChar(100)
  descripcion       String
  fechaRegistro     DateTime           @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?          @db.Timestamp(6)
  Miembro_Proyecto  Miembro_Proyecto[]

  @@schema("public")
}

model Tareas {
  Tarea_ID                                                     Int                  @id @default(autoincrement())
  Proyecto_ID                                                  Int
  etiquetas                                                    String?              @db.VarChar(84)
  nombre                                                       String               @db.VarChar(100)
  descripcion                                                  String?
  prioridad                                                    Int
  valorGemas                                                   Int
  fueReclamada                                                 Boolean              @default(false)
  fechaRegistro                                                DateTime             @default(now()) @db.Timestamp(6)
  fechaModificacion                                            DateTime?            @db.Timestamp(6)
  Usuario_ID                                                   String?              @db.Uuid
  gastos                                                       Decimal?             @db.Decimal
  presupuesto                                                  Decimal?             @db.Decimal
  tiempo                                                       Int
  Estado_Tarea_ID                                              Int                  @default(1)
  esCritica                                                    Boolean?             @default(false)
  fechaFin                                                     DateTime?            @db.Timestamp(6)
  fechaInicio                                                  DateTime?            @db.Timestamp(6)
  puntosExperiencia                                            Int
  Comentarios_Tarea                                            Comentarios_Tarea[]
  Dependencias_Tarea_Dependencias_Tarea_Dependencia_IDToTareas Dependencias_Tarea[] @relation("Dependencias_Tarea_Dependencia_IDToTareas")
  Dependencias_Tarea_Dependencias_Tarea_Tarea_IDToTareas       Dependencias_Tarea[] @relation("Dependencias_Tarea_Tarea_IDToTareas")
  Proyectos                                                    Proyectos            @relation(fields: [Proyecto_ID], references: [Proyecto_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Tareas.Proyecto_ID")
  Usuarios                                                     Usuarios?            @relation(fields: [Usuario_ID], references: [Usuario_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Tareas.Usuario_ID")
  Estados_Tarea                                                Estados_Tarea        @relation(fields: [Estado_Tarea_ID], references: [Estado_Tarea_ID], onDelete: NoAction, onUpdate: NoAction)

  @@schema("public")
}

model Temas {
  Tema_ID           Int               @id @default(autoincrement())
  nombre            String            @db.VarChar(100)
  precio            Decimal           @db.Decimal(10, 2)
  accentHex         String            @db.VarChar(7)
  primaryHex        String            @db.VarChar(7)
  secondaryHex      String            @db.VarChar(7)
  backgroundHex     String            @db.VarChar(7)
  textHex           String            @db.VarChar(7)
  fechaRegistro     DateTime          @default(now()) @db.Timestamp(6)
  fechaModificacion DateTime?         @db.Timestamp(6)
  fuente            String            @db.VarChar
  Historial_Temas   Historial_Temas[]

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Usuarios {
  Usuario_ID            String                  @id @db.Uuid
  nombre                String                  @db.VarChar(100)
  apellido              String                  @db.VarChar(100)
  correo                String                  @db.VarChar(100)
  experiencia           Int                     @default(0)
  nivel                 Int                     @default(1)
  monedas               Int                     @default(0)
  totalGemas            Int                     @default(0)
  tareasAprobadas       Int                     @default(0)
  proyectosCreados      Int                     @default(0)
  foto                  String?
  fechaRegistro         DateTime                @default(now()) @db.Timestamp(6)
  fechaModificacion     DateTime?               @db.Timestamp(6)
  esAdmin               Boolean                 @default(false)
  Idioma_ID             Int?
  contrase_a            String?                 @map("contraseña") @db.VarChar(255)
  confirmado            Boolean                 @default(false)
  ultimoInicioSesion    DateTime?               @db.Timestamp(6)
  eliminado             Boolean                 @default(false)
  Comentarios_Tarea     Comentarios_Tarea[]
  Historial_Fuentes     Historial_Fuentes[]
  Historial_Recompensas Historial_Recompensas[]
  Historial_Temas       Historial_Temas[]
  Insignia_Conseguida   Insignia_Conseguida[]
  Miembro_Proyecto      Miembro_Proyecto[]
  Proyectos             Proyectos[]
  Tareas                Tareas[]
  Idiomas               Idiomas?                @relation(fields: [Idioma_ID], references: [Idioma_ID], onDelete: NoAction, onUpdate: NoAction, map: "FK_Usuarios.Idioma_ID")
  //users                 users                   @relation(fields: [Usuario_ID], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([eliminado, Usuario_ID])
  @@index([eliminado])
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}


